#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 80

behaviors {
    encoder_msc_down_up: encoder_msc_down_up {
        compatible = "zmk,behavior-sensor-rotate";
        label = "ENCODER_MSC_DOWN_UP";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <20>;
    };
};

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&trackball {
    automouse-layer = <4>;
    scroll-layers = <5>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos { compatible = "zmk,combos"; };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E         &kp R            &kp T                                         &kp Y            &kp U  &kp I      &kp O    &kp P
&kp A             &kp S         &kp D         &kp F            &kp G        &kp LS(LG(S))      &kp MINUS     &kp H            &kp J  &kp K      &kp L    &kp EXCL
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V            &kp B        &kp TAB            &kp ESCAPE    &kp N            &kp M  &kp COMMA  &kp DOT  &mt RIGHT_SHIFT LC(QUESTION)
&kp LCTRL         &kp LEFT_WIN  &kp LEFT_ALT  &lt 3 LC(SPACE)  &lt 2 SPACE  &lt 1 SPACE        &lt 1 RETURN  &lt 2 BACKSPACE                             &kp DEL
            >;

            sensor-bindings = <&encoder_msc_down_up>;
        };

        NUMBER {
            bindings = <
&trans  &trans  &trans  &trans  &trans                               &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans           &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &kp KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans           &trans                                                     &trans
            >;
        };

        SYMBOL {
            bindings = <
&kp AT     &kp HASH   &kp DOLLAR  &kp PERCENT  &kp CARET                             &kp AMPERSAND  &kp ASTERISK       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp EQUAL
&kp GRAVE  &kp TILDE  &trans      &trans       &trans     &trans      &kp BACKSLASH  &kp SEMICOLON  &kp SINGLE_QUOTE   &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp PLUS
&trans     &trans     &trans      &trans       &trans     &trans      &kp PIPE       &kp COLON      &kp DOUBLE_QUOTES  &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans
&trans     &trans     &trans      &trans       &trans     &trans      &trans         &trans                                                                         &trans
            >;
        };

        ARROW_AND_FUNCTION {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                       &kp F7  &kp F8  &kp F9  &kp F12  &trans
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans      &trans  &kp F4  &kp F5  &kp F6  &kp F11  &trans
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &trans  &kp F1  &kp F2  &kp F3  &kp F10  &trans
&trans          &trans                  &trans          &trans                   &trans   &trans      &trans  &trans                           &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &mkp MB3  &mkp MB1  &mkp MB2
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                              &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
